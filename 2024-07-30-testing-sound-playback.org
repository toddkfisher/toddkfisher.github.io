#+title: Testing Sound Playback
#+date: <2024-07-30 12:54>
#+description:
#+filetags: sound miniaudio Lisp

*Previous livestreams:*

https://www.youtube.com/watch?v=49ojU19ruHk

https://www.youtube.com/watch?v=8zS1ABTCTmos

* TODAY'S AGENDA
I  have  a  small  test   program,  ~simple-playback.c~,  which  uses  Miniaudio
(https://miniaud.io/)   for  asychronous   sound   playback  and   cancellation.
~simple-playback.c~  is  a  "wrapper"  around Miniaudio's  low-level  API.   The
low-level  API  must  be  used  to play sound  files  preloaded  into  memory  (see
[[file:2024-07-28-playing-sounds-using-in-memory-blobs.org][Livestream  post 28-July-24]])  The wrapper  code in  ~simple-playback.c~ will  be
tested today  (hopefully) and I'll  begin moving functions prefixed  with ~snd_~
over to the ~sound.c~ module.  ~sound.c~ compiles to ~libsound.so~.  Once that's
complete, we should be able to use Lisp/CFFI to call exported functions from the
Lisp REPL.

* EXPORTING C FUNCTIONS TO LISP
A note about what  I mean by "exporting functions to Lisp/CFFI".   I have a Lisp
program ~cffi-gen.lisp~ which parses a limited form of C function declarations:

#+CAPTION: /Syntax for C functions exported to Lisp/CFFI. (using: https://www.bottlecaps.de/rr/ui)/
#+attr_html: :width 65%
[[./CFFI-line-syntax.PNG]]

and produces the appropriate Lisp/CFFI ~defcfun~.  /type-names/ and the /parameter-list/ are
severly restricted but adequate for this project.

For example, the C function declaration:

#+begin_src C
  void ui_set_kbd_repeat(uint32_t timeout_ms, uint32_t delay_ms)  // EXPORT
#+end_src

Produces:

#+begin_src lisp -n 0
  (cffi:defcfun ("ui_set_kbd_repeat" set-kbd-repeat) :void
                (timeout-ms :uint32)
                (delay-ms :uint32))
  (export 'set-kbd-repeat)
#+end_src

when run through ~cffi-gen.lisp~.

*END*
----------
